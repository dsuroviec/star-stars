import { useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Link from "next/link";
import Input from "../components/Input";
import Button from "../components/Button";

const Home: NextPage = () => {
  interface Character {
    name: string;
    height: number;
    mass: number;
    hair_color: string;
    birth_year: string;
    species: string[];
  }

  const [searchedValue, setSearchedValue] = useState<string>("");
  const [character, setCharacter] = useState<Character | null>(null);
  const [species, setSpecies] = useState<any>([]);
  const [films, setFilms] = useState<any>([]);
  const [starships, setStarships] = useState<any>([]);

  const { name, height, mass, hair_color, birth_year } = character || {};
  console.log(starships, "starships");
  console.log(films, "films");
  console.log(species, "species");
  console.log(character);
  return (
    <div className="h-screen w-screen bg-green-100 ">
      <Head>
        <title>Star Stars</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="max-w-[800px] min-h-screen flex flex-col justify-center mx-auto bg-blue-100">
        <section id="Character">
          <div className="bg-blue-400 min-h-[400px] w-3/4 mx-auto rounded-lg shadow-2xl p-4">
            <h1 className="text-center">{name}</h1>
            <div className="flex">
              <div className="border">
                <h2 className="underline text-center">About Me</h2>
                <ul className="list-disc list-inside">
                  <li>Height:&nbsp;{height}cm</li>
                  <li>Weight:&nbsp;{mass}kg</li>
                  <li>Hair Color:&nbsp;{hair_color}</li>
                  <li>DOB:&nbsp;{birth_year}</li>
                  <li>
                    Species:&nbsp;{species.map((species: any) => species.name)}
                  </li>
                </ul>
              </div>
              <div className="border">
                <div className="border">
                  <h2 className="underline text-center">Films Appeared In</h2>
                  <ul className="list-disc list-inside">
                    {films.map((film: any) => (
                      <li>{film.title}</li>
                    ))}
                  </ul>
                </div>
                <div className="border">
                  <h2 className="underline text-center">Starships Flown</h2>
                  <ul className="list-disc list-inside">
                    {starships.map((starship: any) => (
                      <li>{starship.name}</li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </section>

        <form
          onSubmit={async (e) => {
            e.preventDefault();
            // Get the the searched character
            const character = await fetch(
              `https://swapi.dev/api/people/?search=${searchedValue}`
            )
              .then((response) => response.json())
              .then((response) => response.results[0]);

            // Get all films in parallel for which the searched character has starred
            const films = await Promise.all(
              character.films.map((film: string) =>
                fetch(film)
                  .then((response) => response.json())
                  .then((response) => response)
              )
            ).then((data: any) => data.flat());

            // Get all starships in parallel for which searched character has flown
            const starships = await Promise.all(
              character.starships.map((starship: string) =>
                fetch(starship)
                  .then((response) => response.json())
                  .then((response) => response)
              )
            ).then((data: any) => data.flat());

            // Get all species in parallel for which searched character is in
            const species = await Promise.all(
              character.species.map((species: string) =>
                fetch(species)
                  .then((response) => response.json())
                  .then((response) => response)
              )
            ).then((data: any) => data.flat());
            setCharacter(character);
            setFilms(films);
            setStarships(starships);
            setSpecies(species);
          }}
        >
          <Input
            placeholder="Enter the name of a character"
            value={searchedValue}
            onChange={(e) => {
              setSearchedValue(e.target.value);
            }}
          ></Input>
          <Button className="bg-green-400 text-black hover:bg-green-500">
            Lookup Character
          </Button>
        </form>
      </main>
      <footer></footer>
    </div>
  );
};

export default Home;
